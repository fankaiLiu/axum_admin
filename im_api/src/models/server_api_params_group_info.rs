/*
 * 采购系统
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct ServerApiParamsGroupInfo {
    #[serde(rename = "applyMemberFriend", skip_serializing_if = "Option::is_none")]
    pub apply_member_friend: Option<i32>,
    #[serde(rename = "createTime", skip_serializing_if = "Option::is_none")]
    pub create_time: Option<i32>,
    #[serde(rename = "creatorUserID", skip_serializing_if = "Option::is_none")]
    pub creator_user_id: Option<String>,
    #[serde(rename = "ex", skip_serializing_if = "Option::is_none")]
    pub ex: Option<String>,
    #[serde(rename = "faceURL", skip_serializing_if = "Option::is_none")]
    pub face_url: Option<String>,
    #[serde(rename = "groupID", skip_serializing_if = "Option::is_none")]
    pub group_id: Option<String>,
    #[serde(rename = "groupName", skip_serializing_if = "Option::is_none")]
    pub group_name: Option<String>,
    #[serde(rename = "groupType", skip_serializing_if = "Option::is_none")]
    pub group_type: Option<i32>,
    #[serde(rename = "introduction", skip_serializing_if = "Option::is_none")]
    pub introduction: Option<String>,
    #[serde(rename = "lookMemberInfo", skip_serializing_if = "Option::is_none")]
    pub look_member_info: Option<i32>,
    #[serde(rename = "memberCount", skip_serializing_if = "Option::is_none")]
    pub member_count: Option<i32>,
    #[serde(rename = "needVerification", skip_serializing_if = "Option::is_none")]
    pub need_verification: Option<i32>,
    #[serde(rename = "notification", skip_serializing_if = "Option::is_none")]
    pub notification: Option<String>,
    #[serde(rename = "notificationUpdateTime", skip_serializing_if = "Option::is_none")]
    pub notification_update_time: Option<i32>,
    #[serde(rename = "notificationUserID", skip_serializing_if = "Option::is_none")]
    pub notification_user_id: Option<String>,
    #[serde(rename = "ownerUserID", skip_serializing_if = "Option::is_none")]
    pub owner_user_id: Option<String>,
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<i32>,
}

impl ServerApiParamsGroupInfo {
    pub fn new() -> ServerApiParamsGroupInfo {
        ServerApiParamsGroupInfo {
            apply_member_friend: None,
            create_time: None,
            creator_user_id: None,
            ex: None,
            face_url: None,
            group_id: None,
            group_name: None,
            group_type: None,
            introduction: None,
            look_member_info: None,
            member_count: None,
            need_verification: None,
            notification: None,
            notification_update_time: None,
            notification_user_id: None,
            owner_user_id: None,
            status: None,
        }
    }
}


